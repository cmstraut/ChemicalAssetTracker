@model ChangePasswordViewModel
@{
    ViewData["Title"] = "Change password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="banner">Change Password / Profile</div>


<v-app data-app>
    <div id='app'>
        <v-content>
            <v-container fluid>
                <v-layout>
                    <v-flex md6 xs12>
                        <v-card dark flat class='noborder'>
                            <v-card-title class="headline">Change Password</v-card-title>
                            <v-card-text>
                                <div>
                                    <form method="post" v-on:submit="validate">
                                        <v-text-field type="password" v-on:input="on_pswd_modified()" name="OldPassword" label="Current Password" v-model="oldpassword" style="max-width: 20rem; border: none;"></v-text-field>
                                        <v-text-field type="password" v-on:input="on_pswd_modified()" name="NewPassword" label="New Password" v-model="newpassword" style="max-width: 20rem;"></v-text-field>
                                        <v-text-field type="password" v-on:input="on_pswd_modified()" name="ConfirmPassword" label="Confirm Password" v-model="confirmpassword" style="max-width: 20rem;"></v-text-field>
                                        <v-btn type="submit" class="green white--text ml-0">Update Password</v-btn>
                                    </form>
                                    <div class="mt-4" v-bind:class="{ errormessage: have_error(), success: !have_error() } " style="min-height: 2em;">
                                        <p v-html="errormsg"></p>
                                    </div>
                                </div>
                            </v-card-text>
                        </v-card>
                    </v-flex>
                    <v-flex md6 xs12 pl-4>
                        <v-card dark flat class="noborder">
                            <v-card-title class="headline">Profile Information</v-card-title>
                            <v-card-text>
                                <div style="margin-right: 10px;">
                                    <v-text-field v-on:input="on_user_modified()" v-model="email" label="Email" style="max-width: 20rem;"></v-text-field>
                                    <v-text-field v-on:input="on_user_modified()" v-model="last_name" label="Last Name" style="max-width: 20rem;"></v-text-field>
                                    <v-text-field v-on:input="on_user_modified()" v-model="first_name" label="First Name" style="max-width: 20rem;"></v-text-field>
                                    <v-text-field v-on:input="on_user_modified()" v-model="middle_name" label="Middle Name" style="max-width: 20rem;"></v-text-field>
                                    <v-text-field v-on:input="on_user_modified()" v-model="phone" label="Phone" style="max-width: 20rem;"></v-text-field>
                                    <v-select outlined label="Position" :items="position_list" v-on:input="on_user_modified()" v-model="position" style="max-width: 20rem;"></v-select>
                                    <v-text-field v-on:input="on_user_modified()" v-model="workplace" label="Workplace" style="max-width: 20rem;"></v-text-field>
                                    <v-btn v-if="user_modified" class="green white--text ml-0" @@click="on_update_profile">Update Profile</v-btn>
                                    <div class="success mt-4" style="min-height: 2em;">
                                        <p v-html="profile_message"></p>
                                    </div>
                                </div>
                            </v-card-text>
                        </v-card>
                    </v-flex>
                </v-layout>
            </v-container>
        </v-content>
    </div>
</v-app>

@section Scripts {

    <script>

        Vue.use(Vuetify);
        app = new Vue({
            el: '#app',
            data: {
                oldpassword: '@Model.OldPassword',
                newpassword: '@Model.NewPassword',
                confirmpassword: '@Model.ConfirmPassword',
                errormsg: '@Model.StatusMessage',
                email: '@Model.Email',
                phone: decodeURIComponent('@Model.PhoneNumber'),
                last_name: '@Model.LastName',
                first_name: '@Model.FirstName',
                middle_name: '@Model.MiddleName',
                position: '@Model.Position',
                workplace: '@Model.Workplace',
                position_list: ["Head of Department", "Head of College", "Head of University", "Other", "Post Doc", "Professor", "Senior Lab Technician", "Storage Manager", "Student"],
                profile_message: ' ',
                user_modified: false,
            },
            methods: {
                have_error: function () {
                    let result = false;
                    if (this.errormsg) result = (this.errormsg.length > 0 && this.errormsg != "Your password has been changed.");
                    return result;
                },

                validate: function (e) {
                    console.log("in validate");
                    let msgs = [];
                    if (this.oldpassword == '') msgs.push("You must enter your current password.");
                    if (this.newpassword.length < 6) msgs.push("Passwords must contain at least 6 characters.");
                    if (this.newpassword != this.confirmpassword) msgs.push("New Password and Confirm Password do not match");
                    if (msgs.length > 0) {
                        this.errormsg = msgs.join('<br/>');
                        e.preventDefault();
                    }
                },

                show_profile: function () {
                    console.log('Email: ' + this.email);
                    console.log('Phone: ' + this.phone);
                },

                on_pswd_modified: function () {
                    this.errormsg = '';
                },

                on_user_modified: function () {
                    this.user_modified = true;
                    this.profile_message = '';
                },

                on_update_profile: function () {
                    console.log("on_update_profile");
                    let url = utils.root_url() + 'Account/UpdateProfile';
                    let postdata = {
                        Email: this.email,
                        Password: '',
                        LastName: this.last_name,
                        FirstName: this.first_name,
                        MiddleName: this.middle_name,
                        Position: this.position,
                        Workplace: this.workplace,
                        PhoneNumber: this.phone,
                        HomeLocationID: 0,
                        HomeLocation: '',
                        Roles: [],
                        IsChanged: true,
                    };

                    console.log("calling " + url, postdata);
                    let self = this;
                    api.axios_post({
                        url: url,
                        data: postdata,
                        verbose: true,
                        onsuccess: function (result) {
                            console.log("onsuccess", result);
                            self.profile_message = result.Message;
                            self.user_modified = false;
                            self.$forceUpdate();
                        },
                        onfailure: function (result) {
                            console.error("on_update_profile error: " + result.Message)
                            self.profile_message = result.Message;
                            self.forceUpdate();
                        }
                    });
                },
            }
        } );

    </script>
}

@section Styles
    {

    <style>

        .errormessage {
            font-size: larger;
            font-weight: bold;
            color: yellow;
        }

        .success {
            font-size: larger;
            font-weight: bold;
            color: white;
        }
    </style>

}